{"version":3,"sources":["js/Background.js","js/Person.js","js/Bullet.js","js/Player.js","js/UI.js","js/Enemy.js","js/Game.js","main.js"],"names":["Star","ctx","canvas","active","x","Math","floor","random","width","y","dest","color","xVelocity","yVelocity","inBounds","height","fillStyle","fillRect","Background","stars","round","push","drawStars","map","star","draw","update","filter","Person","age","drawImage","image","sin","PI","Bullet","config","Player","imageSrc","Image","src","playerBullets","midpoint","console","log","bulletPosition","UI","Enemy","level","Game","document","createElement","getContext","ui","className","keyboardController","querySelector","appendChild","enemies","score","bg","player","playerSrc","addEventListener","event","keyCode","shoot","a","b","bullet","enemy","isCollide","explode","clearRect","textContent","handleCollision","enemySrc","requestAnimationFrame","run","game"],"mappings":"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","file":"main.083536e5.js","sourceRoot":"../src","sourcesContent":["class Star {\n\tconstructor(ctx, canvas) {\n\t\tthis.canvas = canvas;\n\t\tthis.ctx = ctx;\n\t\tthis.active = true;\n\t\tthis.x = Math.floor(Math.random() * this.canvas.width);\n\t\tthis.y = 0;\n\t\tthis.dest = Math.random();\n\t\tthis.color = `rgba(255, 255, 255, ${this.dest})`\n\t\tthis.xVelocity = 0;\n\t\tthis.yVelocity = this.dest > 0.7 ? 20 : this.dest > 0.5 ? 10 : 5;\n\t\tthis.active = true;\n\n\t\tthis.inBounds = function() {\t\n\t\t\treturn (this.x >= 0 &&\n\t\t\t\tthis.x <= this.canvas.width &&\n\t\t\t\tthis.y >= 0 &&\n\t\t\t\tthis.y <= this.canvas.height\n\t\t\t)\n\t\t}\n\t}\n\n\tdraw() {\n\t\tthis.ctx.fillStyle = this.color;\n\t\tthis.ctx.fillRect(this.x, this.y, 3, 3);\n\t}\n\n\tupdate() {\n\t\tthis.y += this.yVelocity / 10;\n\t\tthis.active = this.active && this.inBounds();\n\t}\n}\n\nexport default class Background {\n\tconstructor(ctx, canvas) {\n\t\tthis.canvas = canvas;\n\t\tthis.ctx = ctx;\n\t\tthis.color = 'black';\n\t\tthis.width = this.canvas.width;\n\t\tthis.height = this.canvas.height;\n\t\tthis.stars = [];\n\t}\n\n\n\tdrawStars() {\n\t\tif(Math.round(Math.random() * 20) == 1) {\n\t\t\tthis.stars.push(new Star(this.ctx, this.canvas));\n\t\t};\n\t}\n\n\tdraw() {\n\t\tthis.ctx.fillStyle = this.color;\n\t\tthis.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\t\t\n\t\tthis.drawStars();\n\t\tthis.stars.map(star => {\n\t\t\tstar.draw()\n\t\t})\n\t}\n\n\tupdate() {\n\t\tthis.stars.map(star => {\n\t\t\tstar.update()\n\t\t});\n\n\t\tthis.stars = this.stars.filter(star => star.active);\n\t}\n};\n","export default class Person {\n  constructor(ctx, x, y, canvas) {\n    this.ctx = ctx\n    this.x = x\n    this.y = y\n    this.age = Math.floor(Math.random() * 128)\n    this.xVelocity = 0\n    this.yVelocity = 1\n    this.width = 32\n    this.height = 32\n    this.active = true\n    this.canvas = canvas\n    this.inBounds = function () {\n      return this.x >= 0 && this.x <= this.canvas.width && this.y >= 0 && this.y <= this.canvas.height\n    }\n  }\n\n  draw() {\n    //this.ctx.fillStyle = this.color;\n    //this.ctx.fillRect(this.x, this.y, 32, 32);\n    this.ctx.drawImage(this.image, this.x, this.y, this.width, this.height)\n  }\n\n  explode() {\n    this.active = false\n  }\n\n  update() {\n    this.x += this.xVelocity\n    this.y += this.yVelocity / 2\n\n    this.xVelocity = 3 * Math.sin((this.age * Math.PI) / 64)\n\n    this.age++\n\n    this.active = this.active && this.inBounds()\n  }\n}\n","export default class Bullet {\n\tconstructor(ctx, x, y, config) {\n\t\tthis.active = true;\n\t\tthis.config = config;\n\t\tthis.ctx = ctx;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = 3;\n\t\tthis.height = 3;\n\t\tthis.xVelocity = 0;\n\t\tthis.yVelocity = -5;\n\t\tthis.inBounds = function() {\n\t\t\treturn (\n\t\t\t\tthis.x >= 0 &&\n\t\t\t\tthis.x <= this.config.width &&\n\t\t\t\tthis.y >= 0 &&\n\t\t\t\tthis.y <= this.config.height\n\t\t\t)\n\t\t};\n\t}\n\n\tdraw() {\n\t\tthis.ctx.fillStyle = 'orange';\n\t\tthis.ctx.fillRect(this.x, this.y, this.width, this.height + 3);\n\t}\n\n\tupdate() {\n\t\tthis.y += this.yVelocity;\n\t\tthis.x += this.xVelocity;\n\n\t\tthis.active = this.active && this.inBounds();\n\t}\n}\n\n","import Person from './Person.js'\nimport Bullet from './Bullet.js'\n\nclass Player extends Person {\n  constructor(ctx, x, y, config, imageSrc) {\n    super(ctx, x, y)\n    this.config = config\n    this.color = 'blue'\n    this.width = 21\n    this.height = 21\n    this.active = true\n    this.image = new Image()\n    this.image.src = imageSrc\n    this.playerBullets = []\n    this.midpoint = function () {\n      return {\n        x: this.x + this.width / 2,\n        y: this.y\n      }\n    }\n\n    console.log(this.image)\n  }\n\n  shoot() {\n    let bulletPosition = this.midpoint()\n\n    this.playerBullets.push(new Bullet(this.ctx, bulletPosition.x, bulletPosition.y, this.config))\n  }\n\n  explode() {\n    this.active = false\n  }\n}\n\nexport default Player\n","export default class UI {\n\tconstructor(ctx, config) {\n\t\tthis.ctx = ctx;\n\t\tthis.config = config;\n\t}\n\n\tdraw() {\n\t}\n} \n","import Person from './Person.js'\n\nclass Enemy extends Person {\n  constructor(ctx, x, y, config, imageSrc) {\n    super(ctx, x, y, ctx.canvas)\n    this.color = 'red'\n    this.image = new Image()\n    this.image.src = imageSrc\n    this.x = Math.round(ctx.canvas.width / 4 + (Math.random() * ctx.canvas.width) / 2)\n    this.yVelocity = 3\n    this.width = 16\n    this.height = 16\n  }\n\n  explode() {\n    this.active = false\n  }\n}\n\nexport default Enemy\n","import Background from './Background.js'\nimport Player from './Player.js'\nimport UI from './UI.js'\nimport Enemy from './Enemy.js'\n\nimport playerSrc from '../images/player.png'\nimport enemySrc from '../images/enemy.png'\n\nconst config = {\n  width: 320,\n  height: 280\n}\n\nconst level = {}\n\nexport default class Game {\n  constructor() {\n    this.config = config\n    this.level = level\n    this.canvas = document.createElement('canvas')\n    this.ctx = this.canvas.getContext('2d')\n    this.ui = document.createElement('div')\n    this.ui.className = 'ui'\n    this.keyboardController()\n    document.querySelector('#screen').appendChild(this.canvas)\n    document.querySelector('#screen').appendChild(this.ui)\n    this.canvas.width = this.config.width\n    this.canvas.height = this.config.height\n    this.enemies = []\n    this.score = 0\n\n    this.bg = new Background(this.ctx, this.config)\n\n    this.player = new Player(this.ctx, this.canvas.width / 2, this.canvas.height - 48, this.config, playerSrc)\n  }\n\n  keyboardController() {\n    document.addEventListener('keydown', (event) => {\n      switch (event.keyCode) {\n        case 87: // w\n          this.player.y -= 32\n          break\n        case 65: // a\n          this.player.x -= 32\n          break\n        case 83: // s\n          this.player.y += 32\n          break\n        case 68: // d\n          this.player.x += 32\n          break\n        case 32: // space\n          this.player.shoot()\n          break\n      }\n    })\n  }\n\n  isCollide(a, b) {\n    return a.x < b.x + b.width && a.x + a.width > b.x && a.y < b.y + b.height && a.y + a.height > b.y\n  }\n\n  handleCollision() {\n    this.player.playerBullets.map((bullet) => {\n      this.enemies.map((enemy) => {\n        if (this.isCollide(bullet, enemy)) {\n          enemy.explode()\n          this.score += 100\n          bullet.active = false\n        }\n      })\n    })\n\n    this.enemies.map((enemy) => {\n      if (this.isCollide(enemy, this.player)) {\n        enemy.explode()\n        this.player.explode()\n      }\n    })\n  }\n\n  draw() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n    this.bg.draw()\n    this.player.draw()\n\n    this.enemies.map((enemy) => {\n      enemy.draw()\n    })\n\n    this.player.playerBullets.map((bullet) => {\n      bullet.draw()\n    })\n  }\n\n  update() {\n    // Screen collision\n    if (this.player.x + this.player.width > this.canvas.width) {\n      this.player.x = this.canvas.width - this.player.width\n    }\n    if (this.player.x < 0) {\n      this.player.x = 0\n    }\n    if (this.player.y + this.player.height > this.canvas.height) {\n      this.player.y = this.canvas.height - this.player.height\n    }\n    if (this.player.y < 0) {\n      this.player.y = 0\n    }\n\n    this.ui.textContent = this.score\n\n    this.handleCollision()\n\n    this.player.playerBullets.map((bullet) => bullet.update())\n    this.enemies.map((enemy) => enemy.update())\n\n    this.bg.update()\n\n    this.enemies = this.enemies.filter((enemy) => enemy.active)\n    this.player.playerBullets = this.player.playerBullets.filter((bullet) => bullet.active)\n\n    if (Math.round(Math.random() * 90) == 1) {\n      this.enemies.push(new Enemy(this.ctx, 0, 0, this.config, enemySrc))\n    }\n  }\n\n  run() {\n    this.draw()\n    this.update()\n\n    requestAnimationFrame(() => this.run())\n  }\n}\n","import Game from './js/Game.js';\n\nconst game = new Game();\n\ngame.run();\n"]}